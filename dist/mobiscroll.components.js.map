{"version":3,"sources":["../src/mobiscroll.components.ts"],"names":[],"mappings":"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","file":"mobiscroll.components.js","sourceRoot":"","sourcesContent":["import { Directive, Input, Output, EventEmitter, ElementRef } from \"@angular/core\"\nimport { MbscProvider } from \"./MbscProvider\"\n\n export class MobiscrollCalendar {\n  public inst:{\n    setVal:Function,\n    _value:string,\n    init:Function,\n    getVal:Function,\n    handlers:{set:Function}\n  }\n  public setter:Function//part of onSet override\n\n   public ref\n   public refChange = new EventEmitter()\n\n   public ngModel\n   public ngModelChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n  \n  public options:{onSet?:Function}={}\n   public mbscOptions:{onSet?:Function} = {}\n   public mbscOptionsChange = new EventEmitter()\n\n  constructor(public ElementRef:ElementRef, public MbscProvider:MbscProvider){}\n\n  ngOnInit(){\n    this.options = Object.assign(this.options, this.mbscOptions)//safe options\n    const orgOnSet = this.mbscOptions.onSet\n    \n    // TODO : Find better way to tap into onSet event without overriding settings onSet\n    this.setter = this.options.onSet = (event, inst)=>{\n      console.log('faq')\n      if(orgOnSet)orgOnSet(event, inst)\n      this.updateDisplay()\n      console.log('set', this.constructor.name)\n    }\n\n    this.inst = this.createInst()\n    this.inst.setVal( this.mbscCalendar || this.ngModel )\n\n    //allow angular finish digest cycle. Avoid Expression has changed error\n    setTimeout(()=>this.refChange.emit( this.ref=this ), 0)\n  }\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().calendar(this.ElementRef.nativeElement, this.options)\n  }\n\n  updateVal(){\n    this.inst.setVal( this.mbscCalendar || this.ngModel )\n    setTimeout(()=>this.updateDisplay(),0)\n  }\n\n  updateDisplay(){\n    this.mbscCalendar = this.inst.getVal()//event.valueText\n    this.mbscCalendarChange.emit( this.mbscCalendar )\n\n    this.ElementRef.nativeElement.value = this.inst._value\n    this.updateModel()\n  }\n\n  updateModel(){\n    this.ngModelChange.emit( this.ngModel = this.mbscCalendar )\n    setTimeout(()=>{\n      this.ElementRef.nativeElement.value=this.inst._value\n    }, 0)\n  }\n\n  ngOnChanges(changes){\n    if(!this.inst)return\n\n    if(changes.mbscCalendar && changes.mbscCalendar.currentValue!=changes.mbscCalendar.previousValue){\n      this.inst.setVal( changes.mbscCalendar.currentValue )\n      this.updateModel()\n    }\n\n    if(changes.ngModel && changes.ngModel.currentValue!=changes.ngModel.previousValue){\n      this.mbscCalendar = changes.ngModel.currentValue\n      this.mbscCalendarChange.emit( this.mbscCalendar )\n      this.inst.setVal( this.mbscCalendar )\n      setTimeout(()=>{\n        this.ElementRef.nativeElement.value=this.inst._value\n      }, 0)\n    }\n\n    if(changes.mbscOptions){\n      this.applyConfig( changes.mbscOptions.currentValue )\n    }\n  }\n\n  applyConfig(config){\n    this.inst.init( Object.assign(this.options, config, {onSet:this.setter}) )\n    //this.updateVal(false)\n  }\n\n  ngAfterViewInit(){\n    setTimeout(()=>this.updateVal(), 0)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-calendar]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: MbscProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-calendar-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-calendar-refChange', ] },],\n'ngModel': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-calendar', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-calendarChange', ] },],\n'mbscOptions': [{ type: Input, args: ['mbsc-options', ] },],\n'mbscOptionsChange': [{ type: Output, args: ['mbsc-optionsChange', ] },],\n};\n}\n\n export class MobiscrollDate extends MobiscrollCalendar {\n   public ref\n   public refChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().date(this.ElementRef.nativeElement, this.options)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-date]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-date-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-date-refChange', ] },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-date', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-dateChange', ] },],\n};\n}\n\n export class MobiscrollDateTime extends MobiscrollCalendar {\n   public ref\n   public refChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().datetime(this.ElementRef.nativeElement, this.options)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-datetime]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-datetime-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-datetime-refChange', ] },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-datetime', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-datetimeChange', ] },],\n};\n}\n\n export class MobiscrollTime extends MobiscrollCalendar {\n   public ref\n   public refChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().time(this.ElementRef.nativeElement, this.options)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-time]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-time-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-time-refChange', ] },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-time', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-timeChange', ] },],\n};\n}\n\nexport const declarations = [\n  MobiscrollCalendar,\n  MobiscrollDate,\n  MobiscrollDateTime,\n  MobiscrollTime\n]\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}