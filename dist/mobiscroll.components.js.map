{"version":3,"sources":["../src/mobiscroll.components.ts"],"names":[],"mappings":"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","file":"mobiscroll.components.js","sourceRoot":"","sourcesContent":["import { Directive, Input, Output, EventEmitter, ElementRef } from \"@angular/core\"\nimport { MbscProvider } from \"./MbscProvider\"\n\nexport interface options {\n  onSet?:Function,\n  //onSetDate?:Function,\n  onMonthChange?:Function\n}\n\nexport interface calInst{\n  setDate:Function,\n  //setVal:Function,\n  _value:string,\n  init:Function,\n  getVal:Function,\n  handlers:{set:Function}\n}\n\n export class MobiscrollCalendar {\n  holdValue\n  instance:calInst\n  setter:Function//part of onSet override\n\n   ref\n   refChange = new EventEmitter()\n\n   ngModel\n   ngModelChange = new EventEmitter()\n\n   mbscCalendar\n   mbscCalendarChange = new EventEmitter<Date>()\n  \n  options:options={}\n   mbscOptions:options = {}\n   mbscOptionsChange = new EventEmitter()\n\n  constructor(public ElementRef:ElementRef, public MbscProvider:MbscProvider){}\n\n  setInstVal(val){\n    val = new Date(val)\n    if(val.toString()=='Invalid Date')return\n    this.instance.setDate( new Date(val) )\n    //this.instance.setVal()\n  }\n\n  ngOnInit(){\n    this.mbscOptions = this.mbscOptions || {}\n    this.options = Object.assign(this.options, this.mbscOptions)//safe options\n    \n    const orgOnMonthChange = this.options.onMonthChange\n    this.options.onMonthChange = (event, inst)=>{\n      this.holdValue = event\n      if(orgOnMonthChange)orgOnMonthChange()\n    }\n\n    // TODO : Find better way to tap into onSet event without overriding settings onSetDate\n    const orgOnSet = this.mbscOptions.onSet\n    this.setter = this.options.onSet = (event, inst)=>{\n      if(orgOnSet)orgOnSet(event, inst)\n\n      if(this.holdValue){\n        let newValue = this.instance.getVal()\n        if(newValue && newValue.constructor==Date){        \n          newValue = new Date(newValue.setFullYear(this.holdValue.year))\n          newValue = new Date(newValue.setMonth(this.holdValue.month))\n          delete this.holdValue\n\n          return this.updateVal(newValue)\n        }\n      }\n\n      this.updateVal( this.instance.getVal() )\n    }\n\n    this.instance = this.createInst()\n    //this.ElementRef.nativeElement.instance = this.instance\n    this.setInstVal( this.getValue() )\n\n    //allow angular finish digest cycle. Avoid Expression has changed error\n    setTimeout(()=>this.refChange.emit( this ), 0)\n  }\n\n  getValue(){\n    if(this.mbscCalendar && new Date(this.mbscCalendar).toString()!='Invalid Date'){\n      return this.mbscCalendar\n    }\n\n    if(this.ngModel){\n      return this.ngModel\n    }\n\n    /* Dont do this. Mobiscroll may have default date but that doesnt mean use it as a value\n    if(this.instance){\n      return this.instance.getDate()\n    }*/\n\n    return this.isValValue(this.mbscCalendar) ? this.mbscCalendar : null\n  }\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().calendar(this.ElementRef.nativeElement, this.options)\n  }\n\n  updateVal(value?){\n    value = value || this.getValue()\n    \n    this.setInstVal( value )\n\n    setTimeout(()=>{\n      this.updateModel(value)\n      setTimeout(()=>this.updateDisplay(), 0)\n    }, 0)\n  }\n\n  updateDisplay(){\n    this.ElementRef.nativeElement.value = this.instance._value\n  }\n\n  updateModel(date?){\n    date = this.ngModel = this.mbscCalendar = date || this.getValue()\n    this.mbscCalendarChange.emit( date )\n    this.ngModelChange.emit( date )\n\n    const form = getParentByTagName(this.ElementRef.nativeElement,'form')\n    if(form)this.fireFormEvents(form)\n  }\n\n  fireFormEvents(form){\n    let event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"input\", true, true);\n    form.dispatchEvent(event)\n\n    event = document.createEvent(\"HTMLEvents\");\n    event.initEvent(\"change\", true, true);\n    form.dispatchEvent(event)\n  }\n\n  isValValue(value){\n    return value && value!='mbsc-calendar' && value!='mbscCalendar'\n  }\n\n  datesMatch(a, b){\n    return a==b || new Date(a).getTime()==new Date(b).getTime()\n  }\n\n  ngOnChanges(changes){\n    if(!this.instance)return\n\n    if(changes.mbscCalendar && !this.datesMatch(changes.mbscCalendar.currentValue,changes.mbscCalendar.previousValue)){\n      const valValue = this.isValValue(changes.mbscCalendar.currentValue)\n      if(valValue && changes.mbscCalendar.currentValue != this.instance.getVal()){\n        this.setInstVal( changes.mbscCalendar.currentValue )\n      }\n      if(valValue)setTimeout(()=>this.updateDisplay(), 0)\n    }\n\n    if(changes.ngModel && !this.datesMatch(changes.ngModel.currentValue,changes.ngModel.previousValue)){\n      this.updateVal( changes.ngModel.currentValue )\n    }\n\n    if(changes.mbscOptions){\n      this.applyConfig( changes.mbscOptions.currentValue )\n    }\n  }\n\n  applyConfig(config){\n    this.instance.init( Object.assign(this.options, config, {onSet:this.setter}) )\n  }\n\n  ngAfterViewInit(){\n    if(this.isValValue(this.getValue())){\n      setTimeout(()=>this.updateVal(), 0)\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-calendar]',\n  exportAs: 'mobiscroll'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: MbscProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-calendar-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-calendar-refChange', ] },],\n'ngModel': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-calendar', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-calendarChange', ] },],\n'mbscOptions': [{ type: Input, args: ['mbsc-options', ] },],\n'mbscOptionsChange': [{ type: Output, args: ['mbsc-optionsChange', ] },],\n};\n}\n\n export class MobiscrollDate extends MobiscrollCalendar {\n   public ref\n   public refChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().date(this.ElementRef.nativeElement, this.options)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-date]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-date-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-date-refChange', ] },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-date', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-dateChange', ] },],\n};\n}\n\n export class MobiscrollDateTime extends MobiscrollCalendar {\n   public ref\n   public refChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().datetime(this.ElementRef.nativeElement, this.options)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-datetime]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-datetime-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-datetime-refChange', ] },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-datetime', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-datetimeChange', ] },],\n};\n}\n\n export class MobiscrollTime extends MobiscrollCalendar {\n   public ref\n   public refChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n\n  createInst(){\n    return this.MbscProvider.getMobiscroll().time(this.ElementRef.nativeElement, this.options)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-time]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ref': [{ type: Input, args: ['mbsc-time-ref', ] },],\n'refChange': [{ type: Output, args: ['mbsc-time-refChange', ] },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-time', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-timeChange', ] },],\n};\n}\n\nexport const declarations = [\n  MobiscrollCalendar,\n  MobiscrollDate,\n  MobiscrollDateTime,\n  MobiscrollTime\n]\n\n\nexport function getParentByTagName(node, tagname) {\n  let parent;\n  if (node === null || tagname === '') return;\n  parent  = node.parentNode;\n  tagname = tagname.toUpperCase();\n\n  while (parent && parent.tagName !== \"HTML\") {\n    if (parent.tagName === tagname) {\n      return parent;\n    }\n    parent = parent.parentNode;\n  }\n\n  return;\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}