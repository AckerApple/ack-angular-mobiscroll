{"version":3,"sources":["../src/mobiscroll.components.ts"],"names":[],"mappings":"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","file":"mobiscroll.components.js","sourceRoot":"","sourcesContent":["import { Directive, Input, Output, EventEmitter, ElementRef } from \"@angular/core\"\nimport { MbscProvider } from \"./MbscProvider\"\n\n export class MobiscrollDate {\n  public inst\n   public ngModel\n   public ngModelChange = new EventEmitter()\n\n   public mbscCalendar\n   public mbscCalendarChange = new EventEmitter<Date>()\n   public mbscOptions:{onSet?:Function} = {}\n\n  constructor(public ElementRef:ElementRef, public MbscProvider:MbscProvider){}\n\n  ngOnInit(){\n    const orgOnSet = this.mbscOptions.onSet\n    \n    this.mbscOptions.onSet = (event, inst)=>{\n      if(orgOnSet)orgOnSet(event, inst)\n      \n      this.mbscCalendar = inst.getVal()//event.valueText\n      this.mbscCalendarChange.emit( this.mbscCalendar )\n\n      this.ngModelChange.emit( this.ngModel=this.mbscCalendar )\n      setTimeout(()=>this.ElementRef.nativeElement.value=inst._value, 0)\n    }\n\n    this.inst = this.MbscProvider.getMobiscroll().date(this.ElementRef.nativeElement, this.mbscOptions)\n\n    //this.updateVal()\n  }\n\n  updateVal(){\n    this.inst.setVal( this.mbscCalendar || this.ngModel )\n    this.ElementRef.nativeElement.value = this.inst._value\n  }\n\n  ngOnChanges(changes){\n    if(this.inst && changes.mbscCalendar && changes.mbscCalendar.currentValue!=changes.mbscCalendar.previousValue){\n      this.updateVal()\n    }\n  }\n\n  ngAfterViewInit(){\n    setTimeout(()=>this.updateVal(), 0)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:'[mbsc-calendar]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: MbscProvider, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngModel': [{ type: Input },],\n'ngModelChange': [{ type: Output },],\n'mbscCalendar': [{ type: Input, args: ['mbsc-calendar', ] },],\n'mbscCalendarChange': [{ type: Output, args: ['mbsc-calendarChange', ] },],\n'mbscOptions': [{ type: Input, args: ['mbsc-options', ] },],\n};\n}\n\nexport const declarations = [\n  MobiscrollDate\n]\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}